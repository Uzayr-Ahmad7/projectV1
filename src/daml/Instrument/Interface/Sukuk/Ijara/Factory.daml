module Instrument.Interface.Sukuk.Ijara.Factory where

import Daml.Finance.Interface.Types.Common.Types (PartiesMap)
import Daml.Finance.Interface.Util.Disclosure qualified as Disclosure (I)
import Instrument.Interface.Sukuk.Ijara.Instrument qualified as Instrument (I)
import Instrument.Interface.Sukuk.Ijara.Types (Ijara)

-- | Type synonym for `Factory`.
type I = Factory

-- | Type synonym for `View`.
type V = View

-- | View of `Factory`.
data View = View
  with
    provider : Party
      -- ^ The provider of the `Factory`.
  deriving (Eq, Show)

-- | Factory interface to instantiate ijara sukuk instruments.
interface Factory requires Disclosure.I where
  viewtype V

  create' : Create -> Update (ContractId Instrument.I)
    -- ^ Implementation of `Create` choice.

  nonconsuming choice Create : ContractId Instrument.I
    -- ^ Create a new instrument.
    with
      ijara : Ijara
        -- ^ Attributes to create a ijara sukuk.
      observers : PartiesMap
        -- ^ The instrument's observers.
    controller ijara.instrument.depository, ijara.instrument.issuer
    do
      create' this arg