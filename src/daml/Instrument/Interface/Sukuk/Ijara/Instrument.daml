module Instrument.Interface.Sukuk.Ijara.Instrument where

import Daml.Finance.Interface.Instrument.Base.Instrument qualified as BaseInstrument (I)
import Daml.Finance.Interface.Util.Disclosure qualified as Disclosure (I)
import Instrument.Interface.Sukuk.Ijara.Types (Ijara)


-- | Type synonym for `Instrument`.
type I = Instrument

-- | Type synonym for `View`.
type V = View

-- | View of `Instrument`.
data View = View
  with
    ijara : Ijara
      -- ^ Attributes of an ijara sukuk.
  deriving (Eq, Show)

-- | Instrument interface representing an ijara sukuk.
interface Instrument requires BaseInstrument.I, Disclosure.I where
  viewtype V

  nonconsuming choice GetView : V
    -- ^ Retrieves the interface view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ view this